name: E2E (Playwright)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - README.md
      - .gitignore
      - .gitpod.yml
      - LICENSE
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - README.md
      - .gitignore
      - .gitpod.yml
      - LICENSE

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x checkout-example/gradlew
      - name: Build checkout-example with Gradle
        run: cd checkout-example; ./gradlew build
      - name: Build checkout-example image
        run: docker build -t checkout-example:latest checkout-example
      - name: Start checkout-example container
        run: docker run --rm -d --name checkout-example -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} checkout-example:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=checkout -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main

  checkout-advanced:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x checkout-example-advanced/gradlew
      - name: Build checkout-example-advanced with Gradle
        run: cd checkout-example-advanced; ./gradlew build
      - name: Build checkout-example-advanced image
        run: docker build -t checkout-example-advanced:latest checkout-example-advanced
      - name: Start checkout-example-advanced container
        run: docker run --rm -d --name checkout-example-advanced -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} checkout-example-advanced:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=advanced-checkout -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main

  giftcard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x giftcard-example/gradlew
      - name: Build giftcard-example with Gradle
        run: cd giftcard-example; ./gradlew build
      - name: Build giftcard-example image
        run: docker build -t giftcard-example:latest giftcard-example
      - name: Start giftcard-example container
        run: docker run --rm -d --name giftcard-example -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} giftcard-example:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=giftcard -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main

  subscription:
    runs-on: ubuntu-latest
    steps:
      - name: Subscription project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x subscription-example/gradlew
      - name: Build subscription-example with Gradle
        run: cd subscription-example; ./gradlew build
      - name: Build subscription-example image
        run: docker build -t subscription-example:latest subscription-example
      - name: Start subscription-example container
        run: docker run --rm -d --name subscription-example -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} subscription-example:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=subscription -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main

  giving:
    runs-on: ubuntu-latest
    steps:
      - name: Giving project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x giving-example/gradlew
      - name: Build giving-example with Gradle
        run: cd giving-example; ./gradlew build
      - name: Build giving-example image
        run: docker build -t giving-example:latest giving-example
      - name: Start giving-example container
        run: docker run --rm -d --name giving-example -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} giving-example:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=giving -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main


  authorisation-adjustment:
    runs-on: ubuntu-latest
    steps:
      - name: Authorisation Adjustment project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x authorisation-adjustment-example/gradlew
      - name: Build authorisation-adjustment-example with Gradle
        run: cd authorisation-adjustment-example; ./gradlew build
      - name: Build authorisation-adjustment-example image
        run: docker build -t authorisation-adjustment-example:latest authorisation-adjustment-example
      - name: Start authorisation-adjustment container
        run: docker run --rm -d --name authorisation-adjustment-example -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_MERCHANT_ACCOUNT=${{ secrets.ADYEN_MERCHANT_ACCOUNT }} -e ADYEN_CLIENT_KEY=${{ secrets.ADYEN_CLIENT_KEY }} -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} authorisation-adjustment-example:latest
      - name: Run testing suite
        run: docker run --rm --name adyen-testing-suite -e PLAYWRIGHT_FOLDERNAME=authorisation-adjustment -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} --network host ghcr.io/adyen-examples/adyen-testing-suite:main


  in-person-payments:
    runs-on: ubuntu-latest
    steps:
      - name: In-person Payments project
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x in-person-payments-example/gradlew
      - name: Build in-person-payments-example with Gradle
        run: cd in-person-payments-example; ./gradlew build
      - name: Build in-person-payments-example image
        run: docker build -t in-person-payments-example-image:latest in-person-payments-example
      - name: Start in-person-payments-example container, set ADYEN_TERMINAL_API_CLOUD_ENDPOINT to default docker bridge and port 3000
        run: docker run --rm -d --name in-person-payments-example-image -p 8080:8080 -e ADYEN_API_KEY="${{ secrets.ADYEN_API_KEY }}" -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} -e ADYEN_TERMINAL_API_CLOUD_ENDPOINT=http://172.17.0.1:3000 -e ADYEN_POS_POI_ID=V400m-123456789 in-person-payments-example-image:latest
      - name: Start the Adyen Mock Terminal API Application on port 3000
        run: docker run --rm -d --name adyen-mock-terminal-api -p 3000:3000 -e PORT=3000 ghcr.io/adyen-examples/adyen-mock-terminal-api:main
      - name: Run testing suite against in-person-payments-example-image
        run: docker run --rm --name adyen-testing-suite -e ADYEN_HMAC_KEY=${{ secrets.ADYEN_HMAC_KEY }} -e PLAYWRIGHT_FOLDERNAME=in-person-payments --network host ghcr.io/adyen-examples/adyen-testing-suite:main
